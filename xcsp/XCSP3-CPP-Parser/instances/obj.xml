<instance format="XCSP3" type="COP">
  <variables>
    <array id="x" size="[5]"> 0..500 </array>
    <array id="y" size="[5][5]"> 1..500 </array>
  </variables>
  <constraints>
    <intension>le(x[1],add(x[0],3))</intension>
     <intension>ge(add(x[0],3),x[1])</intension>
   <intension>lt(x[0],3)</intension>
    <intension>or(le(x[0],2),ge(x[0],5))</intension>
<!--    <intension>lt(0,x)</intension>
    <intension>lt(x[0],4)</intension>
    <intension>gt(x[0],4)</intension>
    <intension>lt(4,x[0])</intension>
    <intension>gt(x[1],sub(x[0],2))</intension>
    <intension>eq(add(x[1],5),y)</intension>
   <group class="channeling">
      <intension> eq(%0,add(%1,%2)) </intension>
      <args> x[1] x[0] y[0][1] </args>
      <args> x[2] x[0] y[0][2] </args>
      <args> x[3] x[0] y[0][3] </args>
      <args> x[4] x[0] y[0][4] </args>
      <args> x[2] x[1] y[1][2] </args>
      <args> x[3] x[1] y[1][3] </args>
      <args> x[4] x[1] y[1][4] </args>
      <args> x[3] x[2] y[2][3] </args>
      <args> x[4] x[2] y[2][4] </args>
      <args> x[4] x[3] y[3][4] </args>
      </group>-->
<intension>
ne(sub(x[1],x[2]))</intension>
  

    <allDifferent> y[0][1..4] y[1][2..4] y[2][3..4] y[3][4] </allDifferent>
  </constraints>
  <objectives>
    <minimize> x[4] </minimize>
  </objectives>
</instance>
