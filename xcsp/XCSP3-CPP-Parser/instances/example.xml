<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<instance format="XCSP3" type="CSP">
    <variables>
        <var id="r">0 1</var>
        <var id="s">0 1</var>
        <var id="t">0 1</var>
        <var id="zz">0..10</var>
        <var id="yy" as="zz"></var>

        <array id="x" size="[7]">0..10</array>
        <var id="xx" as="x"></var>

        <array id="y" size="[4][4]">0..10</array>
<array id="a" size="[3][5]"> 
  <domain for="a[0][]"> 1..10 </domain>
  <domain for="a[1][]"> 1..20 </domain>
  <domain for="a[2][]"> 1..15 </domain>
</array> 
<array id="b" size="[10]"> 
  <domain for="b[4]"> 0 1 </domain> 
  <domain for="others"> 2 4 6 </domain>
</array> 
<array id="c" size="[5][5][5]"> 
  <domain for="c[][0..1][] c[][2][2..4]"> 0..10 </domain> 
  <domain for="others"> 0 1 </domain>

</array>
        <var id="cc" as="c"></var>

    </variables>
    <constraints>

      <precedence class="symmetry-breaking">
        <list> y[][] </list>
        <values> 1 2 </values>
      </precedence>



      <clause> r not(s) t</clause>
      <clause> r not(s)  not(t)</clause>
      <clause> not(r)    not(s)  t</clause>
<intension>eq(add(x,3),5)</intension>

<count id="c4">  <!-- atMost -->
  <list> y[][1] </list>
  <values> 0 </values>
  <condition> (le,2) </condition>
</count>

<regular>
  <list> x[] </list>
  <transitions> 
    (a,0,a)(a,1,b)(b,1,c)(c,0,d)(d,0,d)(d,1,e)(e,0,e) 
  </transitions>
  <start> a </start>
  <final> e </final>
</regular>

<mdd>
  <list> x[1..3]</list>
  <transitions>
    (r,0,n1)(r,1,n2)(r,2,n3)
    (n1,2,n4)(n2,2,n4)(n3,0,n5)
    (n4,0,t)(n5,0,t) 
  </transitions>
</mdd>


<allDifferent> 
  x[1..5]
</allDifferent> 
<allDifferent>
  <list> x[] </list>
  <except> 0 </except>
</allDifferent>

<allDifferent>
  <matrix> 
    (y[1][])
    (y[0][0] y[1][0] y[2][0] y[3][0])
    (y[2][])
    (y[3][])
  </matrix>
</allDifferent>

<allEqual>
<list>y[][] x[]</list>
</allEqual>
<nValues id="c1">
  <list> x[1] x[2]</list>
  <condition> (gt,1) </condition> 
</nValues>

<ordered> 
  <list> y[][2] </list> 
  <operator> lt </operator>
</ordered>   

<ordered id="c" case="strictlyDecreasing"> x[] </ordered>
<lex>
  <list> y[1][] </list>
  <list> y[2][] </list>
  <operator> gt </operator>
</lex>

<lex>
  <matrix> 
                 y[][] 
  </matrix>
  <operator> le </operator>
</lex>


<sum>
  <list> x[1] 
x[2]   x[3] </list>
  <coeffs> 1 2 3 </coeffs>
  <condition> (in,3..6) </condition>  
</sum>


<count id="c1">
  <list> x[] </list>
  <values> 3 </values>
  <condition> (ne,1) </condition>
</count>
<count id="c2">   <!-- among -->
  <list> y[][0] </list>
  <values> 1 5 8 </values>
  <condition> (eq,1) </condition>
</count>
<count id="c3">  <!-- atLeast -->
  <list> x[] </list>
  <values> 1 </values> 
  <condition> (ge,4) </condition>
</count>
<count id="c4">  <!-- atMost -->
  <list> y[][1] </list>
  <values> 0 </values>
  <condition> (le,2) </condition>
</count>
<count id="c5">  <!-- exactly -->
  <list> y[][] </list>
  <values> 1 </values>  
  <condition> (eq,4) </condition>
</count>

<count id="c5">  <!-- exactly variable -->
  <list> y[][] </list>
  <values> 1 </values>  
  <condition> (eq,x[1]) </condition>
</count>

<nValues >
  <list>x[2..4] </list>
  <condition> (eq,3) </condition> 
</nValues>
<nValues >
  <list>x[0..6] </list>
  <condition> (le,x[1]) </condition>  
</nValues>
<nValues >
  <list> x[1..4] </list>
  <except> 0 </except>
  <condition> (eq,2) </condition>  
</nValues>


<cardinality>
  <list> x[1] x[2]        x[3]  x[4] </list>
  <values> 2 5 10 </values>
  <occurs> 0..1 1..3 2..3 </occurs>
</cardinality>

<cardinality>
  <list>x[1..5] </list>
  <values closed="false">x[3..5] </values>
  <occurs>1 2 5 </occurs>
</cardinality>


<minimum>
  <list> x[] </list>
  <condition> (eq,3) </condition>
</minimum>

<minimum>
  <list  startIndex="2">x[] </list>
  <index  rank="any" > y[0][0] </index>
  <condition> (eq,3) </condition>
</minimum>

<element>
  <list> x[] </list>
  <value> x[0] </value>
</element>

<element>
  <list> x[] </list>
  <value> 3 </value>
</element>

<element>
  <list startIndex="1"> x[]</list>
  <index> y[0][0] </index>
  <value> 4 </value>
</element>

<element>
  <list startIndex="1"> x[]</list>
  <index> y[0][0] </index>
  <value> y[1][1] </value>
</element>


<channel>
  <list  startIndex="1"> x[] </list>
</channel>

<channel>
  <list> x[] </list>
  <list> y[1..3][0] </list>
</channel>

<channel>
  <list> x[]</list>
  <value> y[0][0]</value>
</channel>


<stretch>
  <list> x[] </list>
  <values> 1 2 3 0 </values>
  <widths> 1..3 1..3 2..3 2..4 </widths>
</stretch>

<stretch>
  <list> x[] </list>
  <values> 1 2 3 0 </values>
  <widths> 1..3 1..3 2..3 2..4 </widths>
  <patterns>(1,2) (3,4) (2,45)  </patterns>
</stretch>


<noOverlap>
  <origins> x[1..3] </origins>
  <lengths> 1 2 3 </lengths>
</noOverlap>

<block class="symmetryBreaking">
<instantiation>
  <list> x[]</list>
  <values>1 2 3 4 5</values>
</instantiation>
</block>
<group id="g">
  <intension> eq(add(%0,%1),%2) </intension>
  <args> x[0] x[1] x[2] </args> 
  <args> x[3] x[0] x[4] </args> 
</group> 

<noOverlap>
  <origins> (x[1],x[2],x[3])(x[4],x[5],x[6]) </origins>  
  <lengths> (2,4,1)(4,2,3) </lengths>  
</noOverlap>

<intension>le(add(x[0],3),x[1])</intension>




      <nValues>
        <list>mul(0,eq(lg[0],0)) mul(0,eq(lg[1],0)) mul(0,eq(lg[2],0))</list>
        <condition>(eq,4)</condition>
      </nValues>
  </constraints>

 <objectives>
    <minimize type="sum">
      <list> x[] y[0][0] </list>
      <coeffs> 1 1 1 1 1 1 1 25000 </coeffs>
    </minimize>
  </objectives>
</instance>
